@section scripts
{
    <script type="text/javascript">
        var Dispensador = {
            IdDispensador: 0,
            EfectivoActualDispensador: null,
            EfectivoDispensadoDispensador: null,
            EfectivoInicialDispensador: null,
            ModeloDispensador: null,
            NSDispensador: null,
            StatusDispensador: null,
            TipoBillete: null,
            ErrorDispensador: null,
            MarcaDispensador: null,
            NombreDispensador: null,
            Cajeros: null
        };
        var chartOptions = {
            responsive: true,
            maintainAspectRatio: true,
            animationSteps: 30
        };
        var ChartDispensadorData = {
            labels: ["Inicial", "Dispensado", "Actual"],
            datasets: [
                {
                    data: [0, 0, 0],
                    fillColor: "rgba(0, 0, 0, 0)",
                    strokeColor: "rgba(0,0,0,0)",
                    highlightFill: "rgba(0,0,0,0)",
                    highlightStroke: "rgba(0,0,0,0)"
                }, {
                    data: [@Model.EfectivoInicialDispensador, @Model.EfectivoDispensadoDispensador, @Model.EfectivoActualDispensador],
                    fillColor: "rgba(0, 140, 186, 0.67)",
                    strokeColor: "rgba(220,220,220,0.8)",
                    highlightFill: "rgba(220,220,220,0.75)",
                    highlightStroke: "rgba(220,220,220,1)"
                }, {
                    data: [0, 0, 0],
                    fillColor: "rgba(0, 140, 186, 0)",
                    strokeColor: "rgba(0,0,0,0)",
                    highlightFill: "rgba(0,0,0,0)",
                    highlightStroke: "rgba(0,0,0,0)"
                }
            ]
        };
        var id00 = "error-panel";
        var id01 = "ErrorDispensador";
        var id02 = "StatusDispensador";
        var id03 = "EfectivoActualDispensador";
        var id04 = "EfectivoDispensadoDispensador";
        var id05 = "EfectivoInicialDispensador";
        var id06 = "error-panel-body";
        var alertInfo = "class='alert alert-info'";
        var alertDanger = "class='alert alert-danger'";
        var alertSuccess = "class='alert alert-success'";

        var ctx = $("#canvas-chart").get(0).getContext("2d");
        var BarChart = new Chart(ctx).Bar(ChartDispensadorData, chartOptions);

        var UpdateCashLevels = setInterval(function() { CashLevelsAceptadorM() }, 2500);

        var collapsed = false;

        function CashLevelsAceptadorM() {
            $.getJSON("@Url.Action("GetInfo")", { idDispensador: "@Model.IdDispensador" }, function(data) {

                Dispensador = $.parseJSON(data);
                $("#" + id01).replaceWith("<div id=" + id01 + " " + alertInfo + "><strong>" + Dispensador.ErrorDispensador + "</strong></div>");
                $("#" + id02).replaceWith("<div id=" + id02 + " " + (Dispensador.StatusDispensador ? alertDanger : alertSuccess) + ")'><strong>" + (Dispensador.StatusDispensador ? "Error" : "Okey") + "</strong></div>");
                $("#" + id06).replaceWith("<div id=" + id06 + " " + "class='panel-body'" + ">" + Dispensador.ErrorDispensador + "</div>");
                
                BarChart.datasets[1].bars[0].value = Dispensador.EfectivoInicialDispensador;
                BarChart.datasets[1].bars[1].value = Dispensador.EfectivoDispensadoDispensador;
                BarChart.datasets[1].bars[2].value = Dispensador.EfectivoActualDispensador;

                BarChart.update();
                if (!collapsed && Dispensador.StatusDispensador) {
                    $("#" + id00).collapse("toggle");
                    collapsed = true;
                }

                if (collapsed && !Dispensador.StatusDispensador) {
                    $("#" + id00).collapse("toggle");
                    collapsed = false;
                }
            });
        }


    </script>
}
@model EMMTY_GO_WEB.Models.Dispensador

@{
    ViewBag.Title = "Monitoreo";
}

<h2>Monitoreo @Html.DisplayFor(model => model.NombreDispensador)</h2>

<div>
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-primary">

                <div class="panel-heading">@Html.DisplayNameFor(model => model.NSDispensador): @Html.DisplayFor(model => model.NSDispensador)</div>
                <div class="panel-body">
                    Descripcion del componente
                </div>
                <table class="table">
                    <tr>
                        <th></th>
                        <th>
                            @Html.DisplayNameFor(model => model.NombreDispensador)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModeloDispensador)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MarcaDispensador)
                        </th>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            @Html.DisplayFor(model => model.NombreDispensador)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.ModeloDispensador)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.MarcaDispensador)
                        </td>
                    </tr>
                </table>
                <div class="panel-body">
                    Estado del Componente
                </div>
                <div class="row">
                    <div class="col-md-10 col-md-offset-1 col-xs-10 col-xs-offset-1">
                        <div class="row">
                            <div class="col-md-6 col-xs-6">
                                <h5>
                                    @Html.DisplayNameFor(model => model.StatusDispensador)
                                </h5>
                                <div id="StatusDispensador" class="@(Model.StatusDispensador ? "alert alert-danger" : "alert alert-success")">
                                    <strong>@(Model.StatusDispensador ? "Error" : "Okey")</strong>
                                </div>
                            </div>
                            <div class="col-md-6 col-xs-6">
                                <h5>
                                    @Html.DisplayNameFor(model => model.ErrorDispensador)
                                </h5>
                                <div id="ErrorDispensador" class="alert alert-info">
                                    <strong>@Html.DisplayFor(model => model.ErrorDispensador)</strong>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h4>Niveles Efectivo Dispensador</h4>
            <canvas id="canvas-chart"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-info collapse" id="error-panel">
                <div class="panel-heading">
                    Descripcion del Error
                </div>
                <div class="panel-body" id="error-panel-body">
                    @Model.ErrorDispensador
                </div>
            </div>
        </div>
    </div>
</div>
<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Editar", "Edit", new {id = Model.IdDispensador})
        @:|
        @Html.ActionLink("Regresar a la lista", "Index")
        @:|
    }
    @if (Model.Cajeros.Count > 0)
    {
        @Html.ActionLink("Regresar al cajero", "Details", "Cajero", new {id = Model.Cajeros.First().IdCajero}, new {})
    }
    
</p>